#!/bin/bash

# exit the script if any error occurs
set -e

#-------------------------------------------------------------------------------
# initialise all needed file locations

# location where the Solstice binary tarball was unpacked...
solstice_dir=$HOME/01OKDND/solstice/Solstice-0.8.2-GNU-Linux64

# location of solstice post-processing C codes, eg solppraw.c
#solpp_dir=$solstice_dir/src-Linux/ppLinux
solpp_dir=$HOME/01OKDND/solstice/Solstice-PP-Sources-0.3.1

#-------------------------------------------------------------------------------
# configure the environment to run Solstice
solstice_pack=$solstice_dir'/etc/solstice.profile'
source $solstice_pack

# export the SOLSTICE_PATH so that subsidiary scripts can find solstice
export SOLSTICE_PATH=$solstice_path

#-------------------------------------------------------------------------------
# quick-and-dirty compile of the post-processing code if needed

if [ ! -f "$solpp_dir/solppraw" ]; then
	echo "Compiling post-processing codes..."
	gcc $solpp_dir/solmaps.c -o $solpp_dir/solmaps
	gcc $solpp_dir/solpp.c -o $solpp_dir/solpp
	gcc $solpp_dir/solpaths.c -o $solpp_dir/solpath
	gcc $solpp_dir/solppraw.c -o $solpp_dir/solppraw
fi

#-------------------------------------------------------------------------------
# set up some solstice input files

export CASEFOLDER="1-example/results"
python set_case.py

azimuth="`cat $CASEFOLDER/azimuth.input`"
elevation="`cat $CASEFOLDER/elevation.input`"
num_rays="`cat $CASEFOLDER/rays.input`"
rho_mirror="`cat $CASEFOLDER/mirror.input`"

#-------------------------------------------------------------------------------
# enter the $CASEFOLDER for subsequent commands

pushd $CASEFOLDER > /dev/null

#-------------------------------------------------------------------------------
# run solstice
#
echo "Running solstice..."

solstice -D$azimuth,$elevation -v -n $num_rays -R input-rcv.yaml -fo simul input.yaml
#
# preparing post processing
echo "Initial post-processing..."

solstice -D$azimuth,$elevation -g format=obj:split=geometry -fo geom input.yaml
solstice -D$azimuth,$elevation -q -n 100 -R input-rcv.yaml -p default input.yaml > solpaths

#-------------------------------------------------------------------------------
# postprocessing (C codes from Cyril Caliot)

echo "Main post-processing..."

#Read "simul" results and produce a text file with the raw results
$solpp_dir/solppraw simul

#Read "simul" results and produce receiver files (.vtk) of incoming and/or absorbed solar flux per-primitive
$solpp_dir/solmaps simul

#Read "geom" and "simul" file results and produce primaries and receivers files (.vtk), and .obj geometry files
$solpp_dir/solpp geom simul

#Read "solpaths" file and produce readable file (.vtk) by paraview to visualize the ray paths
$solpp_dir/solpath solpaths

#-------------------------------------------------------------------------------
# leave the $CASEFOLDER

popd > /dev/null

#-------------------------------------------------------------------------------
# create an human-readable CSV file with main results, using the raw solstice output

rawfile=$CASEFOLDER'/simul'
python ../srcPy/get_raw.py $rawfile $CASEFOLDER $rho_mirror

